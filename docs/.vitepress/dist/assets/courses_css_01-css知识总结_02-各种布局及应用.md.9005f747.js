import{_ as t}from"./chunks/ArticleMetadata.839094c8.js";import{_ as c,i as r,o as l,c as i,b as p,f as y,t as D,g as F,w as B,e as A,v as C,a as d}from"./app.59cdf3da.js";const q=JSON.parse('{"title":"各种布局及应用","description":"","frontmatter":{"title":"各种布局及应用","author":"Itway","date":"2023/01/05 22:23","categories":[null],"tags":[null]},"headers":[{"level":2,"title":"布局的历史发展","slug":"布局的历史发展","link":"#布局的历史发展","children":[]},{"level":2,"title":"静态布局","slug":"静态布局","link":"#静态布局","children":[{"level":3,"title":"1. 静态布局的特点","slug":"_1-静态布局的特点","link":"#_1-静态布局的特点","children":[]},{"level":3,"title":"2. 静态布局的原理","slug":"_2-静态布局的原理","link":"#_2-静态布局的原理","children":[]},{"level":3,"title":"3. 静态布局的应用场景","slug":"_3-静态布局的应用场景","link":"#_3-静态布局的应用场景","children":[]}]},{"level":2,"title":"流式布局","slug":"流式布局","link":"#流式布局","children":[{"level":3,"title":"1. 流式布局的特点","slug":"_1-流式布局的特点","link":"#_1-流式布局的特点","children":[]},{"level":3,"title":"2. 流式布局的原理","slug":"_2-流式布局的原理","link":"#_2-流式布局的原理","children":[]},{"level":3,"title":"3. 流式布局的应用场景","slug":"_3-流式布局的应用场景","link":"#_3-流式布局的应用场景","children":[]}]},{"level":2,"title":"自适应布局","slug":"自适应布局","link":"#自适应布局","children":[{"level":3,"title":"1. 自适应布局的特点","slug":"_1-自适应布局的特点","link":"#_1-自适应布局的特点","children":[]},{"level":3,"title":"2. 自适应布局的原理","slug":"_2-自适应布局的原理","link":"#_2-自适应布局的原理","children":[]},{"level":3,"title":"3. 自适应布局的应用场景","slug":"_3-自适应布局的应用场景","link":"#_3-自适应布局的应用场景","children":[]}]},{"level":2,"title":"响应式布局","slug":"响应式布局","link":"#响应式布局","children":[{"level":3,"title":"1. 响应式布局的特点","slug":"_1-响应式布局的特点","link":"#_1-响应式布局的特点","children":[]},{"level":3,"title":"2. 响应式布局的原理","slug":"_2-响应式布局的原理","link":"#_2-响应式布局的原理","children":[]},{"level":3,"title":"3. 响应式布局的应用场景","slug":"_3-响应式布局的应用场景","link":"#_3-响应式布局的应用场景","children":[]}]},{"level":2,"title":"弹性布局","slug":"弹性布局","link":"#弹性布局","children":[{"level":3,"title":"1. 弹性布局的特点","slug":"_1-弹性布局的特点","link":"#_1-弹性布局的特点","children":[]},{"level":3,"title":"2. 弹性布局的原理","slug":"_2-弹性布局的原理","link":"#_2-弹性布局的原理","children":[]},{"level":3,"title":"3. 弹性布局的应用场景","slug":"_3-弹性布局的应用场景","link":"#_3-弹性布局的应用场景","children":[]}]}],"relativePath":"courses/css/01-css知识总结/02-各种布局及应用.md","lastUpdated":1746545041000}'),h={name:"courses/css/01-css知识总结/02-各种布局及应用.md"},u={id:"frontmatter-title",tabindex:"-1"},g=p("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),m=d(`<p>写在前面</p><blockquote><p>我们在开发的时候，经常会听到关于各种布局的概念，而且里面有些概念经常会混淆，这篇文章主要就是介绍一下静态布局、流式布局、自适应布局、响应式布局和弹性布局的特点和应用场景</p></blockquote><h2 id="布局的历史发展" tabindex="-1">布局的历史发展 <a class="header-anchor" href="#布局的历史发展" aria-hidden="true">#</a></h2><p>随着互联网和相关设备的发展，前端的布局大概经历了这几个阶段：table 布局阶段、div+css 布局阶段、静态布局阶段、流式布局阶段、自适应布局阶段、响应式布局阶段、弹性布局阶段。前面两种布局已经基本上看不到了，而且现在的布局也越来越往弹性布局靠近。下面的内容主要是重点介绍一下后面几种布局。</p><h2 id="静态布局" tabindex="-1">静态布局 <a class="header-anchor" href="#静态布局" aria-hidden="true">#</a></h2><h3 id="_1-静态布局的特点" tabindex="-1">1. 静态布局的特点 <a class="header-anchor" href="#_1-静态布局的特点" aria-hidden="true">#</a></h3><ul><li>网页中所有元素的单位都是 px.不管浏览器尺寸是多少，网页布局始终按照最初写代码的布局来显示，也就是说所有的屏幕看到的页面都是一样的。</li><li>一般的网站（pc 端）都是按照这种方式来布局的</li><li>屏幕太小的话，页面会出现滚动条</li><li>屏幕太大的话，页面会有很多的空白，整体页面布局不紧凑</li></ul><h3 id="_2-静态布局的原理" tabindex="-1">2. 静态布局的原理 <a class="header-anchor" href="#_2-静态布局的原理" aria-hidden="true">#</a></h3><p>给主要容器设置一个 min-width,居中布局。如果屏幕大小小于这个 min-width，那么就会增加横向滚动条。如果屏幕大小大于这个宽度，那么就会居中显示，旁边留白的显示的底层的背景。</p><div class="language-less"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#D19A66;">.container</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  min-width: </span><span style="color:#D19A66;">1190</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">；</span></span>
<span class="line"><span style="color:#ABB2BF;">  margin: </span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">auto</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.content</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">1190</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1190px</span><span style="color:#A6ACCD;">；</span></span>
<span class="line"><span style="color:#A6ACCD;">  margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1190px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-静态布局的应用场景" tabindex="-1">3. 静态布局的应用场景 <a class="header-anchor" href="#_3-静态布局的应用场景" aria-hidden="true">#</a></h3><p>一般用于官网（pc 端）或者其他 pc 端网站。如果要在移动端显示，一般用的是另外的一套布局。 以京东官网为例：</p><p><strong>3.1 屏幕比页面宽度大</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b6426e443b5c4f75ade02892c8d82326~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt=""> <strong>3.2 屏幕比页面宽度小</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8926bbc251fe42bfab8dc5893b111b12~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt=""></p><p><strong>3.3 特殊说明</strong></p><p>京东官网并不是全部用的静态布局，里面还用到了媒体查询，但是这里的效果是和静态布局类似。</p><h2 id="流式布局" tabindex="-1">流式布局 <a class="header-anchor" href="#流式布局" aria-hidden="true">#</a></h2><h3 id="_1-流式布局的特点" tabindex="-1">1. 流式布局的特点 <a class="header-anchor" href="#_1-流式布局的特点" aria-hidden="true">#</a></h3><p>流式布局也称为液态布局，从名称我们就可以看出来，它的宽度是随着视口的变化而变化的。流式布局具有以下特点：</p><ul><li>屏幕大小变化，页面元素的大小也会跟着变化，但是布局不变</li><li>屏幕太小的时候，页面内容挤成一坨，内容都重叠了，导致页面布局一团乱。</li><li>屏幕太大的时候，页面会拉伸的很长，导致内容在一行显示很长，阅读习惯不好。</li></ul><h3 id="_2-流式布局的原理" tabindex="-1">2. 流式布局的原理 <a class="header-anchor" href="#_2-流式布局的原理" aria-hidden="true">#</a></h3><p>页面最外层的容器的尺寸使用百分比搭配 min-width 和 max-width 来设置，高度一般还是使用 px 来设置。</p><div class="language-less"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#D19A66;">.container</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  width: </span><span style="color:#D19A66;">100</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  min-width: </span><span style="color:#D19A66;">1200</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.content</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">50</span><span style="color:#E06C75;">%</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    height: </span><span style="color:#D19A66;">400</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1200px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">content</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-流式布局的应用场景" tabindex="-1">3. 流式布局的应用场景 <a class="header-anchor" href="#_3-流式布局的应用场景" aria-hidden="true">#</a></h3><p>流式布局在早期的 pc 端布局中还是用的比较多的，但是在现在，不推荐这样使用，因为页面的宽度是随着屏幕的大小来变化的，但是高度还是固定的，就会导致在大屏幕上宽度被拉的很长，但是高度不变，布局看起来不太正常。 就像下面这种情况：</p><p><strong>3.1 屏幕太大</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0d817199c91f4c68ae9fc1ad8dec5340~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt=""></p><p><strong>3.2 屏幕太小</strong></p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a25953845bc746d591a7b517b502b6f2~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt=""></p><h2 id="自适应布局" tabindex="-1">自适应布局 <a class="header-anchor" href="#自适应布局" aria-hidden="true">#</a></h2><h3 id="_1-自适应布局的特点" tabindex="-1">1. 自适应布局的特点 <a class="header-anchor" href="#_1-自适应布局的特点" aria-hidden="true">#</a></h3><ul><li>分别为不同的分辨率的屏幕定义布局。每一个静态布局对应一个分辨率范围。</li><li>在每个静态布局中，页面元素的尺寸不随屏幕大小的变化而变化。除非屏幕尺寸变化让页面从这个静态布局变成了另外一个静态布局。</li><li>自适应布局虽然有好几套样式布局，但是对于用户来说网页是一样的，只是页面的元素的大小发生了变化。</li></ul><h3 id="_2-自适应布局的原理" tabindex="-1">2. 自适应布局的原理 <a class="header-anchor" href="#_2-自适应布局的原理" aria-hidden="true">#</a></h3><p>针对不同分辨率采用@media 媒体查询给不同范围的屏幕分别写一套样式布局，每一套样式布局采用的还是静态布局的方式。</p><p><strong>2.1 添加元标签</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">// 添加元标签</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;viewport&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width=device-width, initial-scale=1&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">// 添加元标签</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>2.2 尽量少使用绝对宽度</strong></p><p><strong>2.3 字体使用相对大小</strong></p><p><strong>2.4 媒体查询</strong></p><div class="language-less"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">@media</span><span style="color:#ABB2BF;"> screen </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> (min-width: </span><span style="color:#D19A66;">768</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.block</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">680</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    background-color: </span><span style="color:#D19A66;">yellow</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">@media</span><span style="color:#ABB2BF;"> screen </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> (min-width: </span><span style="color:#D19A66;">1024</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.block</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">768</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    background-color: </span><span style="color:#D19A66;">blue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">@media</span><span style="color:#ABB2BF;"> screen </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> (min-width: </span><span style="color:#D19A66;">1580</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.block</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">1190</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    background-color: </span><span style="color:#D19A66;">red</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> (</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">768px</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">block</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">680px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> yellow</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> (</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024px</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">block</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">768px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> (</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1580px</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">block</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1190px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="_3-自适应布局的应用场景" tabindex="-1">3. 自适应布局的应用场景 <a class="header-anchor" href="#_3-自适应布局的应用场景" aria-hidden="true">#</a></h3><p>自适应布局在 pc 端和移动端其实都会用到，也是目前网页开发中常常用到的布局方式之一。一般要么是针对 pc 端做自适应布局，要么针对移动端做自适应布局。如果要想同时兼容移动端和 pc 端，那么最好还是使用响应式布局啦。</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5151612fb7344d8b9fc80ff4b6e2f528~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt=""></p><h2 id="响应式布局" tabindex="-1">响应式布局 <a class="header-anchor" href="#响应式布局" aria-hidden="true">#</a></h2><p>响应式布局也会用到媒体查询，前面我们提到自适应布局是在不同的屏幕下看到的页面布局是一样，如果屏幕太小的话，即使对小屏幕进行适配，会发现页面还是过于拥挤，而响应式正式为了解决这个问题，它可以识别屏幕大小，还是根据屏幕大小调整页面的布局。</p><h3 id="_1-响应式布局的特点" tabindex="-1">1. 响应式布局的特点 <a class="header-anchor" href="#_1-响应式布局的特点" aria-hidden="true">#</a></h3><ul><li>屏幕大小变化，元素的大小和位置也会发生改变。</li><li>能同时适应 pc 和移动端，在不同屏幕大小都有一个良好的布局。</li></ul><h3 id="_2-响应式布局的原理" tabindex="-1">2. 响应式布局的原理 <a class="header-anchor" href="#_2-响应式布局的原理" aria-hidden="true">#</a></h3><p>响应式布局的三个原则：移动优先，@media 媒体查询，流式布局（也称为液体布局）。其中首要的就是移动优先，移动优先指的是优先设置移动端（也就是小屏的布局），然后针对不同屏幕使用渐进增强。</p><p><strong>2.1 添加元标签</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;applicable-device&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;pc,mobile&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">http-equiv</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;Cache-Control&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;no-transform &quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="color:#ABB2BF;">&lt;</span><span style="color:#E06C75;">meta</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">name</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;viewport&quot;</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">content</span><span style="color:#ABB2BF;">=</span><span style="color:#98C379;">&quot;width=device-width, initial-scale=1&quot;</span><span style="color:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">applicable-device</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">pc,mobile</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">http-equiv</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Cache-Control</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">no-transform </span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width, initial-scale=1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"></span></code></pre></div><p><strong>2.2 移动优先</strong></p><p>首先写好小屏幕的样式，也就是移动端的样式，推荐使用 vw 或者 rem 的方式来实现。具体参考我的另外一篇文章</p><p><a href="https://juejin.cn/post/7153087500313952263" title="https://juejin.cn/post/7153087500313952263" target="_blank" rel="noreferrer">移动端布局适配方案</a></p><p><strong>2.3 媒体查询</strong></p><p>写好小屏幕样式之后，需要测试一下小屏幕的各种适配情况，然后再使用媒体查询去根据不同的屏幕范围加载对应的样式，这里需要特别说明的是，需要跟设计统一好不同屏幕下的布局，毕竟在设计这块他们还是专业的。</p><div class="language-less"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">@media</span><span style="color:#ABB2BF;"> screen </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> (min-width: </span><span style="color:#D19A66;">768</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.block</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">680</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    background-color: </span><span style="color:#D19A66;">yellow</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">@media</span><span style="color:#ABB2BF;"> screen </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> (min-width: </span><span style="color:#D19A66;">1024</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.block</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">768</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    background-color: </span><span style="color:#D19A66;">blue</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"><span style="color:#C678DD;">@media</span><span style="color:#ABB2BF;"> screen </span><span style="color:#C678DD;">and</span><span style="color:#ABB2BF;"> (min-width: </span><span style="color:#D19A66;">1580</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#D19A66;">.block</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">    width: </span><span style="color:#D19A66;">1190</span><span style="color:#E06C75;">px</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">    background-color: </span><span style="color:#D19A66;">red</span><span style="color:#ABB2BF;">;</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> (</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">768px</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">block</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">680px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> yellow</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> (</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1024px</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">block</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">768px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">@media</span><span style="color:#A6ACCD;"> screen </span><span style="color:#89DDFF;">and</span><span style="color:#A6ACCD;"> (</span><span style="color:#FFCB6B;">min-width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1580px</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">block</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1190px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">background-color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p><strong>2.4 流式布局</strong></p><p>尽量少给主容器元素设置具体的宽度，这里我推荐使用的是 vw 或者百分比的流式布局，然后其他的尺寸尽量使用相对单位。</p><h3 id="_3-响应式布局的应用场景" tabindex="-1">3. 响应式布局的应用场景 <a class="header-anchor" href="#_3-响应式布局的应用场景" aria-hidden="true">#</a></h3><p>响应式布局的应用场景就是需要同时兼容 pc 端和移动端的样式的布局一般都采用这种响应式布局，还有一些公司是 pc 端有一套样式，移动端也有一套样式，比如京东就是这样。像这种的话主要还是看公司业务需要。</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/46d6a9e9f1974a319016af6addfcac5b~tplv-k3u1fbpfcp-zoom-in-crop-mark:4536:0:0:0.image?" alt=""></p><h2 id="弹性布局" tabindex="-1">弹性布局 <a class="header-anchor" href="#弹性布局" aria-hidden="true">#</a></h2><h3 id="_1-弹性布局的特点" tabindex="-1">1. 弹性布局的特点 <a class="header-anchor" href="#_1-弹性布局的特点" aria-hidden="true">#</a></h3><p>弹性布局指的是页面能够根据屏幕的大小进行缩放，实现这种布局的方式有两种类型：</p><ul><li>rem/vw: 实现页面的元素大小随着视口的变化而变化</li><li>flex: 实现页面的元素的自动增长和压缩</li></ul><h3 id="_2-弹性布局的原理" tabindex="-1">2. 弹性布局的原理 <a class="header-anchor" href="#_2-弹性布局的原理" aria-hidden="true">#</a></h3><p>关于弹性布局的这块我就不详细介绍了，感兴趣的可以参考我的另外两篇文章：</p><p><a href="https://juejin.cn/post/7153087500313952263" target="_blank" rel="noreferrer">移动端布局适配方案</a></p><p><a href="https://juejin.cn/post/7142033884434628644" target="_blank" rel="noreferrer">flex 布局详解</a></p><h3 id="_3-弹性布局的应用场景" tabindex="-1">3. 弹性布局的应用场景 <a class="header-anchor" href="#_3-弹性布局的应用场景" aria-hidden="true">#</a></h3><ul><li>rem/vh： 主要应用到适配多种设备</li><li>flex: 主要应用到主容器的布局方式，比如三栏式布局、垂直居中布局、两列布局、等高布局等。</li></ul>`,73);function b(s,_,k,f,v,w){const o=t,e=r("ClientOnly");return l(),i("div",null,[p("h1",u,[y(D(s.$frontmatter.title)+" ",1),g]),F(e,null,{default:B(()=>{var n,a;return[(((n=s.$frontmatter)==null?void 0:n.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!1)?(l(),A(o,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),m])}const j=c(h,[["render",b]]);export{q as __pageData,j as default};
