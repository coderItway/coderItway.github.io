import{_ as p}from"./chunks/ArticleMetadata.f06b230e.js";import{_ as r,i as c,o as t,c as d,b as n,f as y,t as i,g as A,w as F,e as B,j as u,a as C}from"./app.f6f466d0.js";const q=JSON.parse('{"title":"Number对象","description":"","frontmatter":{"title":"Number对象","author":"Itway","date":"2023/01/05 22:09","categories":["JavaScript知识集"],"tags":["JavaScript基础"]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[]},{"level":2,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]},{"level":2,"title":"原型对象","slug":"原型对象","link":"#原型对象","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"relativePath":"courses/javascript/01-javascript基础/05-Number对象.md","lastUpdated":1673277568000}'),D={name:"courses/javascript/01-javascript基础/05-Number对象.md"},b={id:"frontmatter-title",tabindex:"-1"},h=n("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),m=C(`<blockquote><p>示例网站：<a href="https://tsejx.github.io/javascript-guidebook/standard-built-in-objects/numbers-and-dates/number" target="_blank" rel="noreferrer">https://tsejx.github.io/javascript-guidebook/standard-built-in-objects/numbers-and-dates/number</a></p></blockquote><p>JavaScript 中的 <code>Number</code> 对象，是原始数值的对象表示。</p><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h2><p><strong>构造函数</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([value])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p><strong>数值类型转换函数</strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">([</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">]);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">([value])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">类型</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">value</td><td style="text-align:center;">可选，任意类型</td><td style="text-align:center;">表示数字的任意值，默认为 0。</td></tr></tbody></table><p>如果参数 <code>value</code> 无法正常转换为数字，则返回 <code>NaN</code>。</p><ul><li>如果 <code>Number()</code> 函数被当做 <code>Number</code> 对象的构造函数来使用，则以 <code>new</code> 关键字构造一个新的 <code>Number</code> 对象（Number 类型）。该 <code>Number</code> 对象表示参数所指定的数值。</li><li>如果 <code>Number()</code> 函数被当作普通函数使用，则返回转换后的 Number 数据类型的数值。</li></ul><p>⚠️ <strong>注意</strong>：大多数时候，你无需显示地通过 <code>new</code> 关键字来构造一个 <code>Number</code> 对象，因为在 JavaScript 中，Number 对象和 Number 数据类型是相通的，你可以在 Number 数据类型的变量上直接使用 Number 对象的所有属性和方法。</p><h2 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-hidden="true">#</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">释义</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Number.EPSILON</code></td><td style="text-align:center;">表示 1 和大于 1 的最小值（可表示为 <code>Number</code>）的差值。</td></tr><tr><td style="text-align:center;"><code>Number.MAX_SAFE_INTEGER</code></td><td style="text-align:center;">表示在 JavaScript 中最大的安全整数 (253 - 1)。</td></tr><tr><td style="text-align:center;"><code>Number.MAX_VALUE</code></td><td style="text-align:center;">表示在 JavaScript 中的最大数值。最小的负数是 <code>-MAX_VALUE</code>。</td></tr><tr><td style="text-align:center;"><code>Number.MIN_VALUE</code></td><td style="text-align:center;">能表示的最小正数即最接近 0 的正数 (实际上不会变成 0)。最大的负数是 <code>-MIN_VALUE</code>。</td></tr><tr><td style="text-align:center;"><code>Number.NaN</code></td><td style="text-align:center;">特殊的&quot;非数字&quot;值。</td></tr><tr><td style="text-align:center;"><code>Number.NEGATIVE_INFINITY</code></td><td style="text-align:center;">特殊的负无穷大值，在溢出时返回该值。</td></tr><tr><td style="text-align:center;"><code>Number.POSITIVE_INFINITY</code></td><td style="text-align:center;">特殊的正无穷大值，在溢出时返回改值。</td></tr><tr><td style="text-align:center;"><code>Number.prototype</code></td><td style="text-align:center;">表示 <code>Number</code> 构造函数的原型。</td></tr></tbody></table><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">释义</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Number.isNaN()</code></td><td style="text-align:center;">确定传递的值是否是 NaN 和其类型时 Number。它是原始的全局 <code>isNaN()</code> 的更强大的版本。</td></tr><tr><td style="text-align:center;"><code>Number.isFinite()</code></td><td style="text-align:center;">用于检测传入的参数是否时一个有穷数。</td></tr><tr><td style="text-align:center;"><code>Number.isInteger()</code></td><td style="text-align:center;">用来判断传入的参数是否为整数。</td></tr><tr><td style="text-align:center;"><code>Number.isSafeInteger()</code></td><td style="text-align:center;">确定传递的值是否为安全整数 ( -(253 - 1) 至 253 - 1 之间)。</td></tr><tr><td style="text-align:center;"><code>Number.parseFloat()</code></td><td style="text-align:center;">把一个字符串解析为浮点数。</td></tr><tr><td style="text-align:center;"><code>Number.parseInt()</code></td><td style="text-align:center;">根据给定的进制数把一个字符串解析成整数。</td></tr></tbody></table><h2 id="原型对象" tabindex="-1">原型对象 <a class="header-anchor" href="#原型对象" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">释义</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Number.prototype.toExponential()</code></td><td style="text-align:center;">以指数表示法返回该数值字符串表示形式。</td></tr><tr><td style="text-align:center;"><code>Number.prototype.toFixed()</code></td><td style="text-align:center;">使用定点表示法来格式化一个数。</td></tr><tr><td style="text-align:center;"><code>Number.prototype.toLocaleString()</code></td><td style="text-align:center;">返回这个数字在特定语言环境下的表示字符串。</td></tr><tr><td style="text-align:center;"><code>Number.prototype.toPrecision()</code></td><td style="text-align:center;">以指定的精度返回该数值对象的字符串表示。</td></tr><tr><td style="text-align:center;"><code>Number.prototype.toString()</code></td><td style="text-align:center;">返回指定 Number 对象的字符串表示形式。</td></tr><tr><td style="text-align:center;"><code>Number.prototype.valueOf()</code></td><td style="text-align:center;">返回一个被 Number 对象包装的原始值。</td></tr></tbody></table><h2 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例" aria-hidden="true">#</a></h2><p>构造新的 Number 对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">lamborghini</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// 5</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">porsche</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;5.3&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// 5.3</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">maserati</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;">// 0</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">ferrai</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;Ferrai&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// NaN</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> lamborghini </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 5</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> porsche </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5.3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 5.3</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> maserati </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 0</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> ferrai </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Ferrai</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// NaN</span></span>
<span class="line"></span></code></pre></div><p>将数据转换为 Number 数据类型（是原始数值，不是 Number 对象）</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">lamborghini</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">5</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// 5</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">porsche</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;5.3&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// 5.3</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">maserati</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;">// 0</span></span>
<span class="line"><span style="color:#C678DD;">var</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">ferrai</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Number</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;ferrai&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// NaN</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> lamborghini </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 5</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> porsche </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">5.3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 5.3</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> maserati </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 0</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> ferrai </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Number</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ferrai</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// NaN</span></span>
<span class="line"></span></code></pre></div>`,23);function N(s,g,x,E,v,_){const l=p,o=c("ClientOnly");return t(),d("div",null,[n("h1",b,[y(i(s.$frontmatter.title)+" ",1),h]),A(o,null,{default:F(()=>{var e,a;return[(((e=s.$frontmatter)==null?void 0:e.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!1)?(t(),B(l,{key:0,article:s.$frontmatter},null,8,["article"])):u("",!0)]}),_:1}),m])}const j=r(D,[["render",N]]);export{q as __pageData,j as default};
