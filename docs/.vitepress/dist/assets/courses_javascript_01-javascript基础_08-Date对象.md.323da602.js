import{_ as o}from"./chunks/ArticleMetadata.f06b230e.js";import{_ as c,i as r,o as l,c as y,b as t,f as i,t as D,g as F,w as d,e as A,j as C,a as B}from"./app.f6f466d0.js";const f=JSON.parse('{"title":"Date对象","description":"","frontmatter":{"title":"Date对象","author":"Itway","date":"2023/01/09 22:30","categories":["JavaScript知识集"],"tags":["JavaScript基础"]},"headers":[{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[{"level":3,"title":"不带 new 调用","slug":"不带-new-调用","link":"#不带-new-调用","children":[]},{"level":3,"title":"带 new 调用","slug":"带-new-调用","link":"#带-new-调用","children":[]},{"level":3,"title":"数字参数","slug":"数字参数","link":"#数字参数","children":[]},{"level":3,"title":"字符串参数","slug":"字符串参数","link":"#字符串参数","children":[]},{"level":3,"title":"Date.UTC","slug":"date-utc","link":"#date-utc","children":[]}]},{"level":2,"title":"构造函数","slug":"构造函数","link":"#构造函数","children":[{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]},{"level":2,"title":"原型对象","slug":"原型对象","link":"#原型对象","children":[{"level":3,"title":"获取指定时间","slug":"获取指定时间","link":"#获取指定时间","children":[]},{"level":3,"title":"获取指定时间值","slug":"获取指定时间值","link":"#获取指定时间值","children":[]},{"level":3,"title":"设置指定时间值","slug":"设置指定时间值","link":"#设置指定时间值","children":[]}]},{"level":2,"title":"应用示例","slug":"应用示例","link":"#应用示例","children":[{"level":3,"title":"基本用法","slug":"基本用法","link":"#基本用法","children":[]},{"level":3,"title":"格式化时间戳","slug":"格式化时间戳","link":"#格式化时间戳","children":[]}]}],"relativePath":"courses/javascript/01-javascript基础/08-Date对象.md","lastUpdated":1673277568000}'),h={name:"courses/javascript/01-javascript基础/08-Date对象.md"},g={id:"frontmatter-title",tabindex:"-1"},u=t("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),E=B(`<blockquote><p>示例网站：<a href="https://tsejx.github.io/javascript-guidebook/standard-built-in-objects/numbers-and-dates/date" target="_blank" rel="noreferrer">https://tsejx.github.io/javascript-guidebook/standard-built-in-objects/numbers-and-dates/date</a></p></blockquote><p>Date 对象是 JavaScript 语言中内置的数据类型，用于提供日期和时间的操作接口。Date 对象基于 1970 年 1 月 1 日（世界标准时间）起的毫秒数。</p><h2 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-hidden="true">#</a></h2><h3 id="不带-new-调用" tabindex="-1">不带 new 调用 <a class="header-anchor" href="#不带-new-调用" aria-hidden="true">#</a></h3><p>用法一：不带 <code>new</code> 操作符时，像一个函数一样调用。它将忽略所有传入的参数，并返回当前日期和时间的一个<code>字符串</code>表示</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">date</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">date</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// &#39;Fri Dec 03 2021 01:13:39 GMT+0800 (China Standard Time)&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(date)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &#39;Fri Dec 03 2021 01:13:39 GMT+0800 (China Standard Time)&#39;</span></span>
<span class="line"></span></code></pre></div><h3 id="带-new-调用" tabindex="-1">带 new 调用 <a class="header-anchor" href="#带-new-调用" aria-hidden="true">#</a></h3><p>用法二：使用 <code>new</code> 操作符，且不带参数时，将根据当前时间和日期创建一个 <code>Date</code> 对象。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">date</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#E5C07B;">console</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">log</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">date</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Fri Dec 03 2021 01:13:57 GMT+0800 (China Standard Time)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> date </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(date)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Fri Dec 03 2021 01:13:57 GMT+0800 (China Standard Time)</span></span>
<span class="line"></span></code></pre></div><h3 id="数字参数" tabindex="-1">数字参数 <a class="header-anchor" href="#数字参数" aria-hidden="true">#</a></h3><p>用法三：可接受一个数字参数（ <code>Number</code> 数据类型），该参数表示设定时间与 1970 年 1 月 1 日 0 点之间的毫秒数。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">value</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(value)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">描述</th><th>类型</th></tr></thead><tbody><tr><td style="text-align:center;">value</td><td style="text-align:center;">代表自 1970 年 1 月 1 日 00:00:00（世界标准时间）起经过的毫秒数。</td><td>string</td></tr></tbody></table><h3 id="字符串参数" tabindex="-1">字符串参数 <a class="header-anchor" href="#字符串参数" aria-hidden="true">#</a></h3><p>用法四：可接受一个字符串参数（ <code>String</code> 数据类型），参数形式类似于 <code>Date.parse()</code> 方法。但 <code>parse()</code> 方法返回的是一个数字，而 <code>Date()</code> 函数返回的是一个对象。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">dateString</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(dateString)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>关于标准的日期时间字符串中前置 0 的处理，也类似于 <code>Date.parse()</code> 方法，若有前置 0，则相当于 <code>UTC</code> 时间，若没有，则相当于本地时间。其余情况一般都为本地时间。</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">描述</th><th>类型</th></tr></thead><tbody><tr><td style="text-align:center;"><code>dateString</code></td><td style="text-align:center;">表示日期的字符串值。该字符串应该能被 <code>Date.parse()</code> 方法识别</td><td>string</td></tr></tbody></table><h3 id="date-utc" tabindex="-1">Date.UTC <a class="header-anchor" href="#date-utc" aria-hidden="true">#</a></h3><p>用法五：可接受参数形式类似于 <code>Date.UTC()</code> 方法的参数，但 <code>Date.UTC()</code> 方法返回是一个毫秒数，且是 <code>UTC</code> 时间，而 <code>Date()</code> 函数返回是一个对象，且是本地时间。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">UTC</span><span style="color:#ABB2BF;">( </span><span style="color:#E06C75;">year</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">month</span><span style="color:#ABB2BF;">[, </span><span style="color:#E06C75;">day</span><span style="color:#ABB2BF;">[, </span><span style="color:#E06C75;">hour</span><span style="color:#ABB2BF;"> [, </span><span style="color:#E06C75;">minutes</span><span style="color:#ABB2BF;">[, </span><span style="color:#E06C75;">seconds</span><span style="color:#ABB2BF;">[, </span><span style="color:#E06C75;">milliseconds</span><span style="color:#ABB2BF;">]]]]]);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UTC</span><span style="color:#A6ACCD;">( year</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> month[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> day[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> hour [</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> minutes[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> seconds[</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> milliseconds]]]]])</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>当 <code>Date</code> 作为构造函数调用并传入多个参数时，如果数值大于合理范围时（如月份为 13 或者分钟数为 70），相邻的数值会被调整。</p><p>比如 <code>new Date(2013,12,1)</code> 等于 <code>new Date(2014,1,1)</code>，它们都表示日期 <code>2014-01-01</code>（注意月份是从 <code>0</code> 开始的）。其他数值也是类似，<code>new Date(2013,2,1,0,70)</code> 等于 <code>new Date(2013,2,1,1,10)</code>，都表示时间 <code>2013-03-01T01:10:00</code>。</p><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:center;">描述</th><th>类型</th></tr></thead><tbody><tr><td style="text-align:center;"><code>year</code></td><td style="text-align:center;">代表年份的整数值。为了避免 2000 年问题最好指定 4 位数的年份；使用 1998, 而不要用 98。</td><td>number</td></tr><tr><td style="text-align:center;"><code>month</code></td><td style="text-align:center;">代表月份的整数值从 0（1 月）到 11（12 月）。</td><td>number</td></tr><tr><td style="text-align:center;"><code>day</code></td><td style="text-align:center;">代表一个月中的第几天的整数值，从 1 开始。</td><td>number</td></tr><tr><td style="text-align:center;"><code>hour</code></td><td style="text-align:center;">代表一天中的小时数的整数值（24 小时制）。</td><td>number</td></tr><tr><td style="text-align:center;"><code>minute</code></td><td style="text-align:center;">分钟数。</td><td>number</td></tr><tr><td style="text-align:center;"><code>second</code></td><td style="text-align:center;">秒数。</td><td>number</td></tr><tr><td style="text-align:center;"><code>millisecond</code></td><td style="text-align:center;">表示时间的毫秒部分的整数值。</td><td>number</td></tr></tbody></table><p>说明：</p><ul><li>如果没有输入任何参数，则 Date 的构造器会依据系统设置的当前时间来创建一个 Date 对象。</li><li>如果提供了至少两个参数，其余的参数均会默认设置为 1（如果没有提供 day 参数）或者 0。</li><li>JavaScript 的时间是由世界标准时间（UTC）1970 年 1 月 1 日 开始，用毫秒计时，一天由 86,400,000 毫秒组成。Date 对象的范围是 -100,000,000 天至 100,000,000 天（等效的毫秒值）。</li><li>JavaScript 的 Date 对象提供了数个 UTC 时间的方法，也相应提供了当地时间的方法。</li></ul><blockquote><p>UTC，也就是我们所说的格林威治时间，指的是 time 中的世界时间标准。而当地时间则是指执行 JavaScript 的客户端电脑所设置的时间。</p></blockquote><p><strong>注意</strong>：需要注意的是只能通过调用 Date 构造函数来实例化日期对象：以常规函数调用它（即不加 new 操作符）将会返回一个字符串，而不是一个日期对象。另外，不像其他 JavaScript 类型，Date 对象没有字面量格式。</p><h2 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-hidden="true">#</a></h2><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Date.prototype</code></td><td style="text-align:center;">表示 Date 构造函数的原型，允许为 Date 实例对象添加属性方法。</td></tr><tr><td style="text-align:center;"><code>Date.length</code></td><td style="text-align:center;">值是 7，为该构造函数可接受的参数个数。</td></tr></tbody></table><h3 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;"><code>Date.now()</code></td><td style="text-align:center;">返回自 1970 年 1 月 1 日 00:00:00 UTC （世界标准时间）到当前时间的毫秒数。</td></tr><tr><td style="text-align:center;"><code>Date.parse()</code></td><td style="text-align:center;">解析一个表示某个日期的字符串，并返回从 1970-1-1 00:00:00 UTC 到该日期对象（该日期对象的 UTC 时间）的毫秒数，如果该字符串无法识别，或者一些情况下，包含了不合法的日期数值（如：2015-02-31），则返回值为 NaN。</td></tr><tr><td style="text-align:center;"><code>Date.UTC()</code></td><td style="text-align:center;">接受的参数同日期构造函数接受最多参数时一样，返回从 1970-1-1 00:00:00 UTC 到指定日期的毫秒数。</td></tr></tbody></table><h2 id="原型对象" tabindex="-1">原型对象 <a class="header-anchor" href="#原型对象" aria-hidden="true">#</a></h2><p><code>Date</code> 对象没有可以直接读写的属性，所有对日期和时间的访问都需要通过方法。</p><p><code>Date</code> 对象的大多数方法分为两种形式：</p><ul><li>使用本地时间</li><li>使用 UTC 时间</li></ul><h3 id="获取指定时间" tabindex="-1">获取指定时间 <a class="header-anchor" href="#获取指定时间" aria-hidden="true">#</a></h3><p>Conversion getter 类方法从 Date 对象返回一个字符串，表示指定的时间</p><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Date.prototype.toString()</td><td style="text-align:center;">返回本地时区的日期字符串。</td></tr><tr><td style="text-align:center;">Date.prototype.toUTCString()</td><td style="text-align:center;">返回 UTC 时间的日期字符串。</td></tr><tr><td style="text-align:center;">Date.prototype.toISOString()</td><td style="text-align:center;">返回 Date 对象的标准的日期时间字符串格式的字符串。</td></tr><tr><td style="text-align:center;">Date.prototype.toDateString()</td><td style="text-align:center;">返回 Date 对象的日期部分的字符串。</td></tr><tr><td style="text-align:center;">Date.prototype.toTimeString()</td><td style="text-align:center;">返回 Date 对象的时间部分的字符串。</td></tr><tr><td style="text-align:center;">Date.prototype.toJSON()</td><td style="text-align:center;">返回一个符合 JSON 格式的日期字符串，与 toISOString() 方法的返回结果完全相同。</td></tr><tr><td style="text-align:center;">Date.prototype.toLocaleString()</td><td style="text-align:center;">Date.prototype.toString() 方法的本地化转换。</td></tr><tr><td style="text-align:center;">Date.prototype.toLocaleTimeString()</td><td style="text-align:center;">Date.prototype.toTimeString() 方法的本地化转换。</td></tr><tr><td style="text-align:center;">Date.prototype.toLocaleDateString()</td><td style="text-align:center;">Date.prototype.toDateString() 方法的本地化转换。</td></tr><tr><td style="text-align:center;">Date.prototype.valueOf()</td><td style="text-align:center;">返回距离 1970 年 1 月 1 日 0 点 的毫秒数。</td></tr></tbody></table><h3 id="获取指定时间值" tabindex="-1">获取指定时间值 <a class="header-anchor" href="#获取指定时间值" aria-hidden="true">#</a></h3><p>Date 对象提供了一系列 Getter 类方法，用来获取实例对象某个方面的值。</p><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Date.prototype.getTime()</td><td style="text-align:center;">返回距离 1970 年 1 月 1 日 0 点 的毫秒数，同 valueOf()。</td></tr><tr><td style="text-align:center;">Date.prototype.getTimezoneOffset()</td><td style="text-align:center;">返回当前时间与 UTC 的时区差异，以分钟表示（8*60=480 分钟），返回结果考虑到了夏令时因素。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]FullYear()</td><td style="text-align:center;">返回指定日期对象的年份（四位数年份时返回四位数字）。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]Month()</td><td style="text-align:center;">返回指定日期对象的月份（0-11）。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]Date()</td><td style="text-align:center;">返回指定日期对象的月份中的第几天（1-31）。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]Day()</td><td style="text-align:center;">返回指定日期对象的星期中的第几天（0-6）。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]Hours()</td><td style="text-align:center;">返回指定日期对象的小时（0-23）。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]Minutes()</td><td style="text-align:center;">返回指定日期对象的分钟（0-59）。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]Seconds()</td><td style="text-align:center;">返回指定日期对象的秒数（0-59）。</td></tr><tr><td style="text-align:center;">Date.prototype.get[UTC]Milliseconds()</td><td style="text-align:center;">返回指定日期对象的微秒数（0-999）。</td></tr></tbody></table><p>注意：以上方法中含 UTC 则为以世界时间为标准。</p><h3 id="设置指定时间值" tabindex="-1">设置指定时间值 <a class="header-anchor" href="#设置指定时间值" aria-hidden="true">#</a></h3><p>Date 对象提供了一系列 Setter 类方法，用来设置实例对象的各个方面。</p><p>Setter 方法基本与 Getter 方法相对应，Setter 方法传入类似于 Date.UTC() 的参数，返回调整后的日期的内部毫秒数。</p><table><thead><tr><th style="text-align:center;">方法</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Date.prototype.setTime()</td><td style="text-align:center;">通过指定从 1970-1-1 00:00:00 UTC 开始经过的毫秒数来设置日期对象的时间，对于早于 1970-1-1 00:00:00 UTC 的时间可使用负值。</td></tr><tr><td style="text-align:center;">Date.prototype.setYear()</td><td style="text-align:center;">用于设置年份。请使用 Date.prototype.set[UTC]FullYear() 方法代替。</td></tr><tr><td style="text-align:center;">Date.prototype.set[UTC]FullYear()</td><td style="text-align:center;">根据本地时间为指定日期对象设置完整年份（四位数年份是四个数字）。</td></tr><tr><td style="text-align:center;">Date.prototype.set[UTC]Month()</td><td style="text-align:center;">根据本地时间为指定日期对象设置月份。</td></tr><tr><td style="text-align:center;">Date.prototype.set[UTC]Date()</td><td style="text-align:center;">根据世界时设置 Date 对象中月份的一天 (1 ~ 31)。</td></tr><tr><td style="text-align:center;">Date.prototype.set[UTC]Hours()</td><td style="text-align:center;">根据本地时间为指定日期对象设置小时数。</td></tr><tr><td style="text-align:center;">Date.prototype.set[UTC]Minutes()</td><td style="text-align:center;">根据本地时间为指定日期对象设置分钟数。</td></tr><tr><td style="text-align:center;">Date.prototype.set[UTC]Seconds()</td><td style="text-align:center;">根据本地时间为指定日期对象设置秒数。</td></tr><tr><td style="text-align:center;">Date.prototype.set[UTC]Milliseconds()</td><td style="text-align:center;">根据本地时间为指定日期对象设置毫秒数。</td></tr></tbody></table><p>注意：星期只能获取，不能设置。</p><h2 id="应用示例" tabindex="-1">应用示例 <a class="header-anchor" href="#应用示例" aria-hidden="true">#</a></h2><h3 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-hidden="true">#</a></h3><ul><li>普通函数调用：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;">// &quot;Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;2018/4/2&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// &quot;Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;">// &#39;string&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &quot;Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2018/4/2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &quot;Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &#39;string&#39;</span></span>
<span class="line"></span></code></pre></div><ul><li>不带参数的构造函数：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;">// Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;">// Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">();</span></span>
<span class="line"><span style="color:#7F848E;">// &#39;object&#39;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Mon Apr 02 2018 15:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &#39;object&#39;</span></span>
<span class="line"></span></code></pre></div><ul><li>带数字参数的构造函数：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">86400000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Fri Jan 02 1970 08:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// &quot;object&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Thu Jan 01 1970 08:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">86400000</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Fri Jan 02 1970 08:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &quot;object&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li>带字符串参数的构造函数：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;4/2/2018&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;4/2/2018&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// 1522598400000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2018</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// &quot;object&quot;</span></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">parse</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">4</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">/</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">2018</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// &quot;number&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">4/2/2018</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#A6ACCD;">Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">4/2/2018</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 1522598400000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2018</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &quot;object&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">parse</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2018</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &quot;number&quot;</span></span>
<span class="line"></span></code></pre></div><ul><li>关于标准的日期时间字符串中前置 0 的处理，也类似于 Date.parse() 方法，若有前置 0，则相当于 UTC 时间，若没有，则相当于本地时间。其余情况一般都为本地时间。</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;04/02/2018&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;2018-4-2&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;2018-04-02&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">04/02/2018</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2018-4-2</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2018-04-02</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Mon Apr 02 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span></code></pre></div><ul><li>带 UTC 参数的构造函数：</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2016</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Fri Aug 12 2016 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#56B6C2;">+</span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2016</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// 1470931200000</span></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2016</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// &quot;object&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">UTC</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2016</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// 1470960000000</span></span>
<span class="line"><span style="color:#C678DD;">typeof</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">Date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">UTC</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2016</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">12</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// &quot;number&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2016</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Fri Aug 12 2016 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#89DDFF;">+new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2016</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 1470931200000</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2016</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &quot;object&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UTC</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2016</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// 1470960000000</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> Date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">UTC</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2016</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">12</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// &quot;number&quot;</span></span>
<span class="line"></span></code></pre></div><p>使用参数类似于 Date.parse() 函数的方法时，如果日期对象超出范围，浏览器会自动将日期计算成范围内的值。 使用参数类似于 Date.UTC() 函数的方法时，如果日期对象超出范围，浏览器会提示 Invalid Date。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2018</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">7</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">32</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Sat Sep 01 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">2018</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">1</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Sat Sep 01 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;2018-8-32&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Invalid Date</span></span>
<span class="line"><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&quot;2018-9-1&quot;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#7F848E;">// Sat Sep 01 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2018</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">32</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Sat Sep 01 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2018</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Sat Sep 01 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2018-8-32</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Invalid Date</span></span>
<span class="line"><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">2018-9-1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;">// Sat Sep 01 2018 00:00:00 GMT+0800 (中国标准时间)</span></span>
<span class="line"></span></code></pre></div><h3 id="格式化时间戳" tabindex="-1">格式化时间戳 <a class="header-anchor" href="#格式化时间戳" aria-hidden="true">#</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#C678DD;">function</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">formatTimestamp</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;">, </span><span style="color:#E06C75;">format</span><span style="color:#ABB2BF;">) {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">date</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">new</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">Date</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">timestamp</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">+</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">8</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">_</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">3600</span><span style="color:#ABB2BF;"> </span><span style="color:#E06C75;">_</span><span style="color:#ABB2BF;"> </span><span style="color:#D19A66;">1000</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#C678DD;">return</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">date</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">toJSON</span><span style="color:#ABB2BF;">().</span><span style="color:#61AFEF;">substr</span><span style="color:#ABB2BF;">(</span><span style="color:#D19A66;">0</span><span style="color:#ABB2BF;">, </span><span style="color:#D19A66;">19</span><span style="color:#ABB2BF;">).</span><span style="color:#61AFEF;">replace</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;T&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;&#39;</span><span style="color:#ABB2BF;">);</span></span>
<span class="line"><span style="color:#ABB2BF;">}</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">formatTimestamp</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">timestamp</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">format</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">date</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">new</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">Date</span><span style="color:#F07178;">(</span><span style="color:#A6ACCD;">timestamp</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">8</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">3600</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">_</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1000</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">return</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">date</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">toJSON</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">substr</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">19</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">T</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,67);function x(s,v,b,T,m,w){const e=o,p=r("ClientOnly");return l(),y("div",null,[t("h1",g,[i(D(s.$frontmatter.title)+" ",1),u]),F(p,null,{default:d(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!1)?(l(),A(e,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),E])}const M=c(h,[["render",x]]);export{f as __pageData,M as default};
