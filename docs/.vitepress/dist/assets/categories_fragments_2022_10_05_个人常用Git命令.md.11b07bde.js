import{_ as d}from"./chunks/ArticleMetadata.839094c8.js";import{_ as h,i as l,o as e,c as g,b as c,f as p,g as o,w as y,e as u,v as C,a as D}from"./app.59cdf3da.js";const H=JSON.parse('{"title":"个人常用 Git 命令","description":"","frontmatter":{"title":"个人常用 Git 命令","author":"查尔斯","date":"2022/10/05 21:30","isTop":true,"categories":["杂碎逆袭史"],"tags":["Git"]},"headers":[{"level":2,"title":"初始配置","slug":"初始配置","link":"#初始配置","children":[{"level":3,"title":"全局配置","slug":"全局配置","link":"#全局配置","children":[]},{"level":3,"title":"局部配置","slug":"局部配置","link":"#局部配置","children":[]}]},{"level":2,"title":"版本控制相关","slug":"版本控制相关","link":"#版本控制相关","children":[{"level":3,"title":"初始化仓库","slug":"初始化仓库","link":"#初始化仓库","children":[]},{"level":3,"title":"查看工作区状态","slug":"查看工作区状态","link":"#查看工作区状态","children":[]},{"level":3,"title":"将工作区的修改添加到暂存区","slug":"将工作区的修改添加到暂存区","link":"#将工作区的修改添加到暂存区","children":[]},{"level":3,"title":"将暂存区的修改提交到版本库","slug":"将暂存区的修改提交到版本库","link":"#将暂存区的修改提交到版本库","children":[]},{"level":3,"title":"撤销未提交到暂存区的修改","slug":"撤销未提交到暂存区的修改","link":"#撤销未提交到暂存区的修改","children":[]},{"level":3,"title":"撤销暂存区的修改","slug":"撤销暂存区的修改","link":"#撤销暂存区的修改","children":[]},{"level":3,"title":"查看提交日志","slug":"查看提交日志","link":"#查看提交日志","children":[]},{"level":3,"title":"查看操作日志","slug":"查看操作日志","link":"#查看操作日志","children":[]},{"level":3,"title":"回退版本","slug":"回退版本","link":"#回退版本","children":[]},{"level":3,"title":"修改最后一次提交的信息","slug":"修改最后一次提交的信息","link":"#修改最后一次提交的信息","children":[]},{"level":3,"title":"修改指定提交的信息","slug":"修改指定提交的信息","link":"#修改指定提交的信息","children":[]}]},{"level":2,"title":"远程仓库相关","slug":"远程仓库相关","link":"#远程仓库相关","children":[{"level":3,"title":"生成 SSH Key","slug":"生成-ssh-key","link":"#生成-ssh-key","children":[]},{"level":3,"title":"添加远程仓库","slug":"添加远程仓库","link":"#添加远程仓库","children":[]},{"level":3,"title":"查看远程仓库信息","slug":"查看远程仓库信息","link":"#查看远程仓库信息","children":[]},{"level":3,"title":"删除远程仓库","slug":"删除远程仓库","link":"#删除远程仓库","children":[]},{"level":3,"title":"将本地分支推送到远程仓库","slug":"将本地分支推送到远程仓库","link":"#将本地分支推送到远程仓库","children":[]},{"level":3,"title":"克隆远程仓库到本地","slug":"克隆远程仓库到本地","link":"#克隆远程仓库到本地","children":[]},{"level":3,"title":"拉取远程分支与本地分支合并","slug":"拉取远程分支与本地分支合并","link":"#拉取远程分支与本地分支合并","children":[]}]},{"level":2,"title":"多人协作","slug":"多人协作","link":"#多人协作","children":[{"level":3,"title":"查看本地分支","slug":"查看本地分支","link":"#查看本地分支","children":[]},{"level":3,"title":"创建并切换分支","slug":"创建并切换分支","link":"#创建并切换分支","children":[]},{"level":3,"title":"创建分支","slug":"创建分支","link":"#创建分支","children":[]},{"level":3,"title":"切换分支","slug":"切换分支","link":"#切换分支","children":[]},{"level":3,"title":"将指定分支合并到当前分支","slug":"将指定分支合并到当前分支","link":"#将指定分支合并到当前分支","children":[]}]},{"level":2,"title":"标签相关","slug":"标签相关","link":"#标签相关","children":[{"level":3,"title":"查看标签","slug":"查看标签","link":"#查看标签","children":[]},{"level":3,"title":"打标签","slug":"打标签","link":"#打标签","children":[]},{"level":3,"title":"查看指定标签详细信息","slug":"查看指定标签详细信息","link":"#查看指定标签详细信息","children":[]},{"level":3,"title":"删除标签","slug":"删除标签","link":"#删除标签","children":[]},{"level":3,"title":"将本地标签推送到远程仓库","slug":"将本地标签推送到远程仓库","link":"#将本地标签推送到远程仓库","children":[]}]}],"relativePath":"categories/fragments/2022/10/05/个人常用Git命令.md","lastUpdated":1746545041000}'),A={name:"categories/fragments/2022/10/05/个人常用Git命令.md"},F={id:"个人常用-git-命令",tabindex:"-1"},v=c("a",{class:"header-anchor",href:"#个人常用-git-命令","aria-hidden":"true"},"#",-1),k=D(`<h2 id="初始配置" tabindex="-1">初始配置 <a class="header-anchor" href="#初始配置" aria-hidden="true">#</a></h2><h3 id="全局配置" tabindex="-1">全局配置 <a class="header-anchor" href="#全局配置" aria-hidden="true">#</a></h3><p>在进行版本管理之前，首先需要对 Git 进行用户配置。</p><p>全局配置指的是当前终端上的所有仓库使用该配置，可以在任何位置设置。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># 全局配置用户名</span></span>
<span class="line"><span style="color:#ABB2BF;">git config --global user.name </span><span style="color:#98C379;">&quot;用户名&quot;</span></span>
<span class="line"><span style="color:#7F848E;"># 全局配置用户邮箱</span></span>
<span class="line"><span style="color:#ABB2BF;">git config --global user.email </span><span style="color:#98C379;">&quot;用户邮箱&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># 全局配置用户名</span></span>
<span class="line"><span style="color:#A6ACCD;">git config --global user.name </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;"># 全局配置用户邮箱</span></span>
<span class="line"><span style="color:#A6ACCD;">git config --global user.email </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户邮箱</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="局部配置" tabindex="-1">局部配置 <a class="header-anchor" href="#局部配置" aria-hidden="true">#</a></h3><p>局部配置指的是当前终端上的指定仓库使用该配置，需要在指定仓库内进行设置。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># 局部配置用户名</span></span>
<span class="line"><span style="color:#ABB2BF;">git config user.name </span><span style="color:#98C379;">&quot;用户名&quot;</span></span>
<span class="line"><span style="color:#7F848E;"># 局部配置用户邮箱</span></span>
<span class="line"><span style="color:#ABB2BF;">git config user.email </span><span style="color:#98C379;">&quot;用户邮箱&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># 局部配置用户名</span></span>
<span class="line"><span style="color:#A6ACCD;">git config user.name </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#676E95;"># 局部配置用户邮箱</span></span>
<span class="line"><span style="color:#A6ACCD;">git config user.email </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户邮箱</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h2 id="版本控制相关" tabindex="-1">版本控制相关 <a class="header-anchor" href="#版本控制相关" aria-hidden="true">#</a></h2><h3 id="初始化仓库" tabindex="-1">初始化仓库 <a class="header-anchor" href="#初始化仓库" aria-hidden="true">#</a></h3><p>自动创建 master 分支。</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git init</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git init</span></span>
<span class="line"></span></code></pre></div><h3 id="查看工作区状态" tabindex="-1">查看工作区状态 <a class="header-anchor" href="#查看工作区状态" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git status</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git status</span></span>
<span class="line"></span></code></pre></div><h3 id="将工作区的修改添加到暂存区" tabindex="-1">将工作区的修改添加到暂存区 <a class="header-anchor" href="#将工作区的修改添加到暂存区" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>该命令可执行多次，来实现将多个文件的修改添加到暂存区。另外，如果某个文件在添加到暂存区后又发生了变更，在没有提交到版本库之前，依然需要执行一次该命令。</p></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git add 文件名1 [文件名2...]</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git add 文件名1 </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">文件名2...</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="将暂存区的修改提交到版本库" tabindex="-1">将暂存区的修改提交到版本库 <a class="header-anchor" href="#将暂存区的修改提交到版本库" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git commit -m </span><span style="color:#98C379;">&quot;提交信息&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git commit -m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">提交信息</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="撤销未提交到暂存区的修改" tabindex="-1">撤销未提交到暂存区的修改 <a class="header-anchor" href="#撤销未提交到暂存区的修改" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git restore 文件名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git restore 文件名</span></span>
<span class="line"></span></code></pre></div><h3 id="撤销暂存区的修改" tabindex="-1">撤销暂存区的修改 <a class="header-anchor" href="#撤销暂存区的修改" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git restore --staged 文件名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git restore --staged 文件名</span></span>
<span class="line"></span></code></pre></div><h3 id="查看提交日志" tabindex="-1">查看提交日志 <a class="header-anchor" href="#查看提交日志" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># --oneline 以一行格式显示提交日志</span></span>
<span class="line"><span style="color:#7F848E;"># 查看该文件的提交日志</span></span>
<span class="line"><span style="color:#ABB2BF;">git log [--oneline] [文件名]</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># --oneline 以一行格式显示提交日志</span></span>
<span class="line"><span style="color:#676E95;"># 查看该文件的提交日志</span></span>
<span class="line"><span style="color:#A6ACCD;">git log </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">--oneline</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">文件名</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="查看操作日志" tabindex="-1">查看操作日志 <a class="header-anchor" href="#查看操作日志" aria-hidden="true">#</a></h3><p>相比于 <code>git log</code>，reflog 可以查看到所有的操作行为，例如：回退版本······</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git reflog</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git reflog</span></span>
<span class="line"></span></code></pre></div><h3 id="回退版本" tabindex="-1">回退版本 <a class="header-anchor" href="#回退版本" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>1、回退版本的数量较少时，可以将 <code>HEAD~回退版本的数量</code> 改为 <code>HEAD^</code> 的写法。</p><p><code>HEAD^</code> 相当于 <code>HEAD~1</code>，<code>HEAD^^</code> 相当于 <code>HEAD~2</code>，依次类推。</p><p>2、回退版本的数量比较多时，建议采用指定 Commit ID 来回退的方法</p></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># --hard 回退到相应版本，放弃之前版本的修改</span></span>
<span class="line"><span style="color:#ABB2BF;">git reset --hard HEAD~回退版本的数量/HEAD^/Commit ID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;"># --soft 回退到相应版本，保留之前版本的修改</span></span>
<span class="line"><span style="color:#ABB2BF;">git reset --soft HEAD~回退版本的数量/HEAD^/Commit ID</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># --hard 回退到相应版本，放弃之前版本的修改</span></span>
<span class="line"><span style="color:#A6ACCD;">git reset --hard HEAD~回退版本的数量/HEAD^/Commit ID</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;"># --soft 回退到相应版本，保留之前版本的修改</span></span>
<span class="line"><span style="color:#A6ACCD;">git reset --soft HEAD~回退版本的数量/HEAD^/Commit ID</span></span>
<span class="line"></span></code></pre></div><h3 id="修改最后一次提交的信息" tabindex="-1">修改最后一次提交的信息 <a class="header-anchor" href="#修改最后一次提交的信息" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">笔者说</p><p>如果你已经将之前本地版本推送到了远程仓库，那么在下一次推送的时候就需要加上 <code>-f</code> 参数了。</p><p><code>git push -f</code></p><p>但是 GitHub 或者公司内的 GitLab 等，默认都是禁止强制推送的，需要设置一下，所以还是多加注意吧。</p></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git commit --amend [--author</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;用户名 &lt;用户邮箱&gt;&quot;</span><span style="color:#ABB2BF;">] [-m 提交信息]</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git commit --amend </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">--author</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名 &lt;用户邮箱&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-m 提交信息</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="修改指定提交的信息" tabindex="-1">修改指定提交的信息 <a class="header-anchor" href="#修改指定提交的信息" aria-hidden="true">#</a></h3><div class="warning custom-block"><p class="custom-block-title">笔者说</p><p>如果你已经将之前本地版本推送到了远程仓库，那么在下一次推送的时候就需要加上 <code>-f</code> 参数了。</p><p><code>git push -f</code></p><p>但是 GitHub 或者公司内的 GitLab 等，默认都是禁止强制推送的，需要设置一下，所以还是多加注意吧。</p></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># 1.开始（Commit ID 是要修改提交信息的版本的上一个版本的 Commit ID）</span></span>
<span class="line"><span style="color:#ABB2BF;">git rebase -i Commit ID</span></span>
<span class="line"><span style="color:#7F848E;"># 2.打开记事本后，将对应提交前的 pick 改为 e 或 edit，保存退出</span></span>
<span class="line"><span style="color:#7F848E;"># 3.进行修订，同上</span></span>
<span class="line"><span style="color:#ABB2BF;">git commit --amend [--author</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">&quot;用户名 &lt;用户邮箱&gt;&quot;</span><span style="color:#ABB2BF;">] [-m 提交信息]</span></span>
<span class="line"><span style="color:#7F848E;"># 4.完成</span></span>
<span class="line"><span style="color:#ABB2BF;">git rebase --continue</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># 1.开始（Commit ID 是要修改提交信息的版本的上一个版本的 Commit ID）</span></span>
<span class="line"><span style="color:#A6ACCD;">git rebase -i Commit ID</span></span>
<span class="line"><span style="color:#676E95;"># 2.打开记事本后，将对应提交前的 pick 改为 e 或 edit，保存退出</span></span>
<span class="line"><span style="color:#676E95;"># 3.进行修订，同上</span></span>
<span class="line"><span style="color:#A6ACCD;">git commit --amend </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">--author</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户名 &lt;用户邮箱&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-m 提交信息</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#676E95;"># 4.完成</span></span>
<span class="line"><span style="color:#A6ACCD;">git rebase --continue</span></span>
<span class="line"></span></code></pre></div><h2 id="远程仓库相关" tabindex="-1">远程仓库相关 <a class="header-anchor" href="#远程仓库相关" aria-hidden="true">#</a></h2><h3 id="生成-ssh-key" tabindex="-1">生成 SSH Key <a class="header-anchor" href="#生成-ssh-key" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># 一路回车即可，最终会在 \${user.home}/.ssh/ 下生成 id_rsa.pub 公钥文件和 id_rsa 私钥文件</span></span>
<span class="line"><span style="color:#ABB2BF;">ssh-keygen -t rsa -C </span><span style="color:#98C379;">&quot;用户邮箱&quot;</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># 一路回车即可，最终会在 \${user.home}/.ssh/ 下生成 id_rsa.pub 公钥文件和 id_rsa 私钥文件</span></span>
<span class="line"><span style="color:#A6ACCD;">ssh-keygen -t rsa -C </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户邮箱</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><h3 id="添加远程仓库" tabindex="-1">添加远程仓库 <a class="header-anchor" href="#添加远程仓库" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git remote add origin 远程仓库Git地址</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git remote add origin 远程仓库Git地址</span></span>
<span class="line"></span></code></pre></div><h3 id="查看远程仓库信息" tabindex="-1">查看远程仓库信息 <a class="header-anchor" href="#查看远程仓库信息" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git remote -v</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git remote -v</span></span>
<span class="line"></span></code></pre></div><h3 id="删除远程仓库" tabindex="-1">删除远程仓库 <a class="header-anchor" href="#删除远程仓库" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git remote rm origin</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git remote rm origin</span></span>
<span class="line"></span></code></pre></div><h3 id="将本地分支推送到远程仓库" tabindex="-1">将本地分支推送到远程仓库 <a class="header-anchor" href="#将本地分支推送到远程仓库" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># 第一次推送时，加上 [-u]，后续不需要加 [-u]</span></span>
<span class="line"><span style="color:#7F848E;"># 如果远程分支名和本地分支名相同，可以省略</span></span>
<span class="line"><span style="color:#7F848E;"># 常见用法：</span></span>
<span class="line"><span style="color:#7F848E;">#   git push -u origin master</span></span>
<span class="line"><span style="color:#7F848E;">#   git push origin master</span></span>
<span class="line"><span style="color:#7F848E;">#   git push</span></span>
<span class="line"><span style="color:#ABB2BF;">git push [-u] [远程主机名] [本地分支名]:[远程分支名]</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># 第一次推送时，加上 [-u]，后续不需要加 [-u]</span></span>
<span class="line"><span style="color:#676E95;"># 如果远程分支名和本地分支名相同，可以省略</span></span>
<span class="line"><span style="color:#676E95;"># 常见用法：</span></span>
<span class="line"><span style="color:#676E95;">#   git push -u origin master</span></span>
<span class="line"><span style="color:#676E95;">#   git push origin master</span></span>
<span class="line"><span style="color:#676E95;">#   git push</span></span>
<span class="line"><span style="color:#A6ACCD;">git push </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-u</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">远程主机名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">本地分支名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">远程分支名</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><p><strong>【谨慎】如果本地版本和远程版本不一致，可强制推送覆盖：</strong></p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git push [--force/-f] [远程主机名] [本地分支名]:[远程分支名]</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git push </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">--force/-f</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">远程主机名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">本地分支名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">远程分支名</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="克隆远程仓库到本地" tabindex="-1">克隆远程仓库到本地 <a class="header-anchor" href="#克隆远程仓库到本地" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">笔者说</p><p>适用于本地不存在仓库，远程存在的情况。</p><p>例如：换了电脑，刚开始进入某个项目组等场景。</p></div><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git clone 远程仓库Git地址</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git clone 远程仓库Git地址</span></span>
<span class="line"></span></code></pre></div><h3 id="拉取远程分支与本地分支合并" tabindex="-1">拉取远程分支与本地分支合并 <a class="header-anchor" href="#拉取远程分支与本地分支合并" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># 如果远程分支是与当前分支合并，则冒号后面的部分可以省略</span></span>
<span class="line"><span style="color:#7F848E;"># 常见用法：git pull origin</span></span>
<span class="line"><span style="color:#ABB2BF;">git pull [远程主机名] [远程分支名]:[本地分支名]</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># 如果远程分支是与当前分支合并，则冒号后面的部分可以省略</span></span>
<span class="line"><span style="color:#676E95;"># 常见用法：git pull origin</span></span>
<span class="line"><span style="color:#A6ACCD;">git pull </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">远程主机名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">远程分支名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;">:</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">本地分支名</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h2 id="多人协作" tabindex="-1">多人协作 <a class="header-anchor" href="#多人协作" aria-hidden="true">#</a></h2><h3 id="查看本地分支" tabindex="-1">查看本地分支 <a class="header-anchor" href="#查看本地分支" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git branch</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git branch</span></span>
<span class="line"></span></code></pre></div><h3 id="创建并切换分支" tabindex="-1">创建并切换分支 <a class="header-anchor" href="#创建并切换分支" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git switch -c 分支名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git switch -c 分支名</span></span>
<span class="line"></span></code></pre></div><h3 id="创建分支" tabindex="-1">创建分支 <a class="header-anchor" href="#创建分支" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git branch 分支名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git branch 分支名</span></span>
<span class="line"></span></code></pre></div><h3 id="切换分支" tabindex="-1">切换分支 <a class="header-anchor" href="#切换分支" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git switch 分支名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git switch 分支名</span></span>
<span class="line"></span></code></pre></div><h3 id="将指定分支合并到当前分支" tabindex="-1">将指定分支合并到当前分支 <a class="header-anchor" href="#将指定分支合并到当前分支" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git merge 分支名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git merge 分支名</span></span>
<span class="line"></span></code></pre></div><h2 id="标签相关" tabindex="-1">标签相关 <a class="header-anchor" href="#标签相关" aria-hidden="true">#</a></h2><h3 id="查看标签" tabindex="-1">查看标签 <a class="header-anchor" href="#查看标签" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git tag</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git tag</span></span>
<span class="line"></span></code></pre></div><h3 id="打标签" tabindex="-1">打标签 <a class="header-anchor" href="#打标签" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#7F848E;"># 将指定版本打标签</span></span>
<span class="line"><span style="color:#7F848E;"># 常见用法:</span></span>
<span class="line"><span style="color:#7F848E;">#   git tag -a v1.0.0 -m &quot;version 1.0.0&quot; b43375</span></span>
<span class="line"><span style="color:#7F848E;">#   git tag v1.0.0</span></span>
<span class="line"><span style="color:#ABB2BF;">git tag [-a 标签名] [-m 标签信息] [Commit ID]</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#676E95;"># 将指定版本打标签</span></span>
<span class="line"><span style="color:#676E95;"># 常见用法:</span></span>
<span class="line"><span style="color:#676E95;">#   git tag -a v1.0.0 -m &quot;version 1.0.0&quot; b43375</span></span>
<span class="line"><span style="color:#676E95;">#   git tag v1.0.0</span></span>
<span class="line"><span style="color:#A6ACCD;">git tag </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-a 标签名</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">-m 标签信息</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">Commit ID</span><span style="color:#89DDFF;">]</span></span>
<span class="line"></span></code></pre></div><h3 id="查看指定标签详细信息" tabindex="-1">查看指定标签详细信息 <a class="header-anchor" href="#查看指定标签详细信息" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git show 标签名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git show 标签名</span></span>
<span class="line"></span></code></pre></div><h3 id="删除标签" tabindex="-1">删除标签 <a class="header-anchor" href="#删除标签" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git tag -d 标签名</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git tag -d 标签名</span></span>
<span class="line"></span></code></pre></div><h3 id="将本地标签推送到远程仓库" tabindex="-1">将本地标签推送到远程仓库 <a class="header-anchor" href="#将本地标签推送到远程仓库" aria-hidden="true">#</a></h3><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#ABB2BF;">git push origin -tags</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#A6ACCD;">git push origin -tags</span></span>
<span class="line"></span></code></pre></div>`,77);function b(s,B,m,f,E,_){const t=l("Badge"),i=d,r=l("ClientOnly");return e(),g("div",null,[c("h1",F,[p("个人常用 Git 命令 "),o(t,{text:"持续更新",type:"warning"}),p(),v]),o(r,null,{default:y(()=>{var a,n;return[(((a=s.$frontmatter)==null?void 0:a.aside)??!0)&&(((n=s.$frontmatter)==null?void 0:n.showArticleMetadata)??!1)?(e(),u(i,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),k])}const G=h(A,[["render",b]]);export{H as __pageData,G as default};
